/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.11.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.CustomerProfile;
import org.openapitools.model.CustomerProfileResponse;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-01-21T21:05:52.609592+01:00[Europe/Zurich]", comments = "Generator version: 7.11.0")
@Validated
@Tag(name = "customers", description = "the customers API")
public interface CustomersApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /customers/{customerId} : Retrieve a customer profile
     * Get the details of a customer profile by ID.
     *
     * @param customerId The ID of the customer (required)
     * @return Customer profile details (status code 200)
     *         or Customer not found (status code 404)
     */
    @Operation(
        operationId = "customersCustomerIdGet",
        summary = "Retrieve a customer profile",
        description = "Get the details of a customer profile by ID.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Customer profile details", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CustomerProfileResponse.class))
            }),
            @ApiResponse(responseCode = "404", description = "Customer not found")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/customers/{customerId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<CustomerProfileResponse> customersCustomerIdGet(
        @Parameter(name = "customerId", description = "The ID of the customer", required = true, in = ParameterIn.PATH) @PathVariable("customerId") String customerId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"profile\" : { \"firstName\" : \"John\", \"lastName\" : \"Doe\", \"birthdate\" : \"1980-01-01\", \"economicCircumstances\" : { \"annualIncome\" : 100000, \"netWorth\" : 500000, \"liabilities\" : 100000 }, \"investmentExperience\" : \"Moderate\", \"riskTolerance\" : \"Medium\", \"investmentObjectives\" : \"Wealth accumulation\", \"contactDetails\" : { \"phone\" : \"+41791234567\", \"email\" : \"john.doe@example.com\" } }, \"id\" : \"c123456\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /customers : Create a new customer profile
     * Create a new customer profile with details required for FIDLEG compliance.
     *
     * @param customerProfile  (required)
     * @return Customer profile created successfully (status code 201)
     *         or Invalid input data (status code 400)
     */
    @Operation(
        operationId = "customersPost",
        summary = "Create a new customer profile",
        description = "Create a new customer profile with details required for FIDLEG compliance.",
        responses = {
            @ApiResponse(responseCode = "201", description = "Customer profile created successfully", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CustomerProfileResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid input data")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/customers",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<CustomerProfileResponse> customersPost(
        @Parameter(name = "CustomerProfile", description = "", required = true) @Valid @RequestBody CustomerProfile customerProfile
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"profile\" : { \"firstName\" : \"John\", \"lastName\" : \"Doe\", \"birthdate\" : \"1980-01-01\", \"economicCircumstances\" : { \"annualIncome\" : 100000, \"netWorth\" : 500000, \"liabilities\" : 100000 }, \"investmentExperience\" : \"Moderate\", \"riskTolerance\" : \"Medium\", \"investmentObjectives\" : \"Wealth accumulation\", \"contactDetails\" : { \"phone\" : \"+41791234567\", \"email\" : \"john.doe@example.com\" } }, \"id\" : \"c123456\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
